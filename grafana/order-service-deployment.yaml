apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
      component: java
  template:
    metadata:
      labels:
        app: order-service
        component: java
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9464"
        prometheus.io/path: "/metrics"
    spec:
      initContainers:
        - name: prometheus-agent
          image: ebinsu/prometheus-agent:12
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: prometheus-javaagent
              mountPath: /prometheus-javaagent
        - name: otel-javaagent
          image: ebinsu/agent:1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-javaagent
              mountPath: /otel-javaagent
      containers:
        - image: ebinsu/order-service:27
          imagePullPolicy: IfNotPresent
          name: order-service
          env:
            - name: JAVA_OPTS
              value: "-javaagent:/otel-javaagent/opentelemetry-javaagent.jar -javaagent:/prometheus-javaagent/jmx_prometheus_javaagent.jar=9464:/prometheus-javaagent/config.yaml"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://opentelemetry-collector:4317"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name=order-service,service.namespace=defalut"
          ports:
            - name: http
              containerPort: 8080
            - name: metrics
              containerPort: 9464
          volumeMounts:
            - name: otel-javaagent
              mountPath: /otel-javaagent
            - name: prometheus-javaagent
              mountPath: /prometheus-javaagent
      volumes:
        - emptyDir: { }
          name: otel-javaagent
        - emptyDir: { }
          name: prometheus-javaagent